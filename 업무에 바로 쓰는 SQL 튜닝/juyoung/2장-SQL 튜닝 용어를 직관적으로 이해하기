기본적으로 알아야 할 용어들

### 물리 엔진과 오브젝트 용어

- DB 엔진 용어
    
    사용자는 DB에서 원하는 데이터를 가져오고자 SQL문을 실행한다.
    
    1. MySQL 엔진에서 문법, 유효성 등 검사.
    2. 효율적인 접근 전략 수립
    3. 스토리지 엔진에 위치한 데이터에 접근하여 MySQL 엔진으로 전달
    4. MySQL 엔진에서 데이터 필터링 후 사용자에게 전달
    
    - 스토리지 엔진
        - 사용자가 요청한 SQL 문을 토대로 DB에 저장된 디스크나 메모리에서 필요한 데이터를 가져오는 역할. 이후 MySQL 엔진으로 전달.
        - 저장 방식에 따라 스토리지 엔진 선택하여 사용할 수 있음.
    - MySQL 엔진
        - SQL 문의 시작 및 마무리 단계에 관여하며, 스토리지 엔진으로부터 필요한 데이터만을 가져오는 핵심 역할을 담당
- SQL 프로세스 용어
    - 파서는 MySQL이 이해할 수 있는 최소 단위로 구성요소를 분리하고 해당 구성요소를 트리로 만든다. 이 과정에서 문법 검토를 한다.
    - 전처리기는 유효성 검증을 진행한다.
    - 옵티마이저는 데이터를 효율적으로 가져오기 위해 효율적인 경로로 데이터를 검색하는 실행 계획을 수립한다.
    - 엔진 실행기는 실행 계획을 토대로 스토리지 엔진을 호출해 필요한 데이터를 가져온 후 필터링하여 사용자에게 결과를 전달한다.
- DB 오브젝트 용어
    - 테이블, 로우, 컬럼, 기본 키, 외래 키, 뷰
    - 인덱스
        - 고유 인덱스란 말 인덱스를 구성하는 열들의 데이터가 유일하다는 의미
        - 비고유 인덱스란 고유 인덱스에서 데이터의 유일한 속성만 제외한 키이다.

### 논리적인 SQL 개념 용어

- 서브쿼리 위치에 따른 SQL 용어
    - 스칼라 서브쿼리는 SELECT 절에 있는 또 다른 SELECT 절
    - 인라인 뷰는 FROM 절에 있는 또 다른 SELECT 절
    - 중첩 서브쿼리는 WHERE 절에 있는 또 다른 SELECT 절
- 메인쿼리와의 관계성에 따른 SQL 용어
    - 비상관 서브쿼리는 메인쿼리와 서브쿼리 간에 관계성이 없음을 의미
        
        → 서브쿼리가 독자적으로 실행한 뒤 메인쿼리에게 그 결과를 던져주는 형태
        
    - 상관 서브쿼리는 메인쿼리와 서브쿼리 간에 관계성이 있음을 의미
- 반환 경과에 따른 SQL 용어
    - 단일행 서브쿼리는 서브쿼리 결과가 1건의 행으로 반환되는 쿼리.
    - 다중행 서브쿼리는 서브쿼리 결과가 여러 행으로 반환되는 쿼리.
    - 다중 열 서브쿼리는 서브쿼리 결과가 여러 행과 열로 반환되는 쿼리.
- 조인 연산방식 용어
  
- 조인 알고리즘 용어
    
    다수의 테이블에서 조인을 수행할 때는 동시에 여러 개의 테이블에 접근할 수 없으므로 우선순위를 정해야 한다. 이 때, 테이블에 접근하는 선후 관계에 따라 드라이빙 테이블과 드리븐 테이블로 구분한다.
    
    → 드라이빙 테이블의 반환값을 가지고 드리븐 테이블에 접근하기 때문에, 드라이빙 테이블을 무엇으로 선정할지는 매우 중요한 문제이다.
    
    - 성능 향상에 필요한 조인 알고리즘의 개념과 튜닝 방법
        - 중첩 루프 조인
            
            드라이빙 테이블의 데이터 1건당 드리븐 테이블을 반복해 검색하며 최종적으로는 양쪽 테이블에 공통된 데이터를 출력한다.
            
        - 블록 중첩 루프 조인
        - 배치 키 액세스 조인
        - 해시 조인

### 개념적인 튜닝 용어

오브젝트들을 스캔하는 유형, 디스크 접근 방식에 대한 절

- 기초 용어
    - 오브젝트 스캔 유형은 테이블 스캔과 인덱스 스캔으로 구분하는데, 테이블 스캔은 인덱스를 거치지 않고 바로 디스크에 위치한 테이블 데이터에 접근하는 유형이며, 인덱스 스캔은 인덱스로 테이블 데이터를 찾아가는 유형이다.
        - 테이블 스캔
            - 테이블 풀 스캔은 인덱스를 거치지 않고 테이블로 바로 직행하여 처음부터 끝까지 데이터를 훑어보는 방식
        - 인덱스 스캔
            - 인덱스 범위 스캔은 인덱스를 범위 기준으로 스캔한 뒤 스캔 결과를 토대로 테이블의 데이터를 찾아가는 방식
            - 인덱스 풀 스캔은 인덱스를 처음부터 끝까지 수행하는 방식
            - 인덱스 고유 스캔은 기본 키나 고유 인덱스로 테이블에 접근하는 방식으로, 인덱스를 사용하는 스캔 방식 중 가장 효율적인 스캔 방식
            - 인덱스 루스 스캔은 인덱스의 필요한 부분들만 골라 스캔하는 방식
            - 인덱스 병합 스캔은 테이블 내에 생성된 인덱스들을 통합해서 스캔하는 방식
    - 디스크 접근 방식
        
        MySQL은 원하는 데이터를 찾으려고 데이터가 저장된 스토리지의 페이지에 접근한다.
        
        - 시퀀셜 액세스는 물리적으로 인접한 페이지를 차례대로 읽는 순차 접근 방식으로, 보통 테이블 풀 스캔에서 활용한다.
        - 랜덤 액세스는 물리적으로 떨어진 페이지들에 임의로 접근하는 임의 접근 방식으로, 페이지가 위치한 물리적인 위치를 고려하지 않고 접근한다.
        
        SQL문의 WHERE 절 조건문 기준으로 데이터가 저장된 디스크에 접근한다. 이때 필요한 데이터에 액세스하는 조건문으로 데이터를 가져오고, 가져온 데이터에서 다시 한번 출력할 데이터만 추출한다.
        
        - 액세스 조건은 디스크에 있는 데이터에 어떻게 접근할 것인지를 다루는 것
        - 필터 조건은 액세스 조건을 이용해 MySQL 엔진으로 가져온 데이터를 기준으로, 추가로 불필요한 데이터를 제거하거나 가공하는 조건.
- 응용 용어
    - 선택도란 테이블의 특정 열을 기준으로 해당 열의 조건절(WHERE 절 조건문)에 따라 선택되는 데이터 비율을 의미한다.
    - 카디널리티란 ‘하나의 데이터 유형으로 정의되는 데이터 행의 개수’로, 여기서는 전체 데이터에 접근한 뒤 출력될 것이라 예상되는 데이터 건수를 가리킨다. 현업에서는 전체 행에 대한 특정 열의 중복 수치를 나타내는 지표로 자주 활용한다.
        
        MySQL에서는 중복을 제외한 유일한 데이터값의 수로 계산한다.
        
    - 힌트는 데이터를 빨리 찾을 수 있게 추가 정보를 전달하는 것을 의미한다. 주석, 쿼리의 일부로 작성하는 방법이 있다.
    - 콜레이션은 특정 문자셋으로 데이터베이스에 저장된 값을 비교하거나 정렬하는 작업의 규칙을 의미한다.
    - 옵티마이저는 통계정보에 기반을 두고 SQL 문의 실행 계획을 수립한다. 통계정보는 데이터베이스 관리자가 맡을 역할이긴 하지만, 쿼리를 수행하는 역할자 또한 통계정보가 현재 최신으로 관리되는지, 오래된 통계정보 때문에 SQL문이 엉뚱한 방향으로 수행되지는 않는지를 확인할 수 있다.
    - 히스토그램은 테이블의 열값이 어떻게 분포되어 있는지를 확인하는 통계정보이다. 옵티마이저가 실행 계획을 최적화하고자 참고하는 정보로, 잘못된 히스토그램 정보가 있다면 잘못된 실행 계획으로 SQL문이 실행될 수 있다.

###
