사실상 주석은 기껏해야 필요악이다. -> 이 말을 듣고 적잖이 충격 먹었다. 인턴을 할 때도, 교육을 들을때도 주석의 필요성과 좋은 효과만을 가르치고 강조했을 뿐, 코드가 지저분해진다던지 가독성을 오히려 떨어뜨리고, 오해를 불러 일으킬 거라고는 생각하지 못했다.
바로 다음 오는 문장이 더 충격적이었다. "실패를 만회하기 위해 주석을 사용한다." 이건 지난날의 내가 달았던 모든 주석에 대한 넉다운 펀치다. 돌이켜 생각해보면 너무나 정확한 지적이라는 것.

이번 정리는 주석에 대해 이해하고 도움이 되었다기 보단 코드 작성에 대한 내 태도를 고쳐줬던 문장들을 나열한다고 봐도 좋을 것 같다.
첫째, 주석은 나쁜 코드를 보완하지 못한다. 자신이 저지른 난장판을 주석으로 설명하려 애쓰는 대신에 그 난장판을 깨끗이 치우는 데 시간을 보내라!
둘째, 의미를 명료하게 밝히는 주석. 때때로 모호한 인수나 반환값은 그 의미를 읽기 좋게 표현하면 이해하기 쉬워진다. 물론 그릇된 주석을 달아놓을 위험은 상당히 높다. 주석이 올바른지 검증하기 쉽지 않기 때문이다.
셋째, Todo 주석. 어떤 용도로 사용하든 시스템에 나쁜 코드를 남겨 놓는 핑계가 되어서는 안 된다.
넷째, 주절거리는 주석. 특별한 이유 없이 의무감으로 혹은 프로세스에서 하라고 하니까 마지못해 주석을 단다면 전적으로 시간낭비다.
다섯째, 오해할 여지가 있는 주석. 때때로 의도는 좋았으나 프로그래머가 딱 맞을 정도로 엄밀하게는 주석을 달지 못하기도 한다. 그래 놓고 그 불쌍한 프로그래머는 자기 코드가 굼벵이 기어가듯 돌아가는 이유를 찾느라 골머리를 앓는다.
여섯째, 이력을 기록하거나, 있으나 마나 한 주석.
일곱째, 전역 정보. 주석을 달아야 한다면 근처에 있는 코드만 기술해라.

담지 않은 내용은 크게 정리해야 할 필요를 못 느껴서 정리하지 않은 내용들이 아니다. 지금까지 내가 지키려 했고 너무나 당연하다고 생각했던 내용들이기에 그렇다. 그렇기에 내가 정리해 둔 내용을 참고하기 보다는 책을 통해 더 정확한 정보를 얻기를 바란다.
